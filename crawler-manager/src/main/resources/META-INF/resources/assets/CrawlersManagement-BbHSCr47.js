import{M as E,r as U,B as o,h as w,v as d,N as p,A as v,s as L,i as e,e as D,t as c,p as $,j as Y,f,o as P,P as R,F as B,y as V,Q as z}from"./vendor-Mr6oR_SG.js";import{c as I,A as O,_ as N,d as j,b as q,a as K}from"./index-DZVWbUD3.js";import{A as Q,g as F}from"./primevue-COZmI4QV.js";import{s as G}from"./index-CdxwA4cm.js";const J={class:"crawler-health-card"},W={class:"card-header"},X={class:"flex align-items-center"},Z={class:"flex-1"},ee={class:"m-0 text-900 font-semibold text-lg"},te={class:"m-0 text-600 text-sm"},se={class:"flex align-items-center card-actions"},ae={class:"card-content"},re={class:"grid mb-3"},le={class:"col-6"},ie={class:"metric-item"},oe={class:"col-6"},ne={class:"metric-item"},ce={class:"metric-item mb-3"},de={class:"metric-value"},ue={key:0,class:"metric-item mb-3"},he={class:"endpoint-section"},me={class:"flex align-items-center endpoint-container"},pe={class:"endpoint-url flex-1"},ve=E({__name:"CrawlerHealthCard",props:{crawler:{},health:{}},emits:["healthUpdated"],setup(x,{emit:u}){const r=x,y=u,{showToast:i,handleApiError:g}=I(),n=U(!1),C=o(()=>{switch(r.health.status){case"HEALTHY":return"health-healthy";case"UNHEALTHY":return"health-unhealthy";default:return"health-unknown"}}),_=o(()=>{switch(r.health.status){case"HEALTHY":return"pi pi-check-circle";case"UNHEALTHY":return"pi pi-times-circle";default:return"pi pi-question-circle"}}),S=o(()=>{switch(r.health.status){case"HEALTHY":return"success";case"UNHEALTHY":return"danger";default:return"warning"}}),T=o(()=>{switch(r.health.status){case"HEALTHY":return"card-healthy";case"UNHEALTHY":return"card-unhealthy";default:return"card-unknown"}}),H=o(()=>r.health.responseTimeMs===null?"text-600":r.health.responseTimeMs<500?"text-green-600":r.health.responseTimeMs<1e3?"text-orange-600":"text-red-600"),b=o(()=>{switch(r.health.status){case"HEALTHY":return"text-green-700";case"UNHEALTHY":return"text-red-700";default:return"text-orange-700"}}),k=o(()=>r.health.responseTimeMs===null?"N/A":`${r.health.responseTimeMs}ms`),A=o(()=>{if(!r.health.lastCheck)return"Never";const t=new Date(r.health.lastCheck),h=new Date().getTime()-t.getTime(),m=Math.floor(h/1e3),M=Math.floor(m/60);return m<60?`${m}s ago`:M<60?`${M}m ago`:t.toLocaleString()}),s=async()=>{n.value=!0;try{const t=await O.forceHealthCheck(r.crawler.id);y("healthUpdated",t),i.success("Health Check",`Forced health check for ${r.crawler.name}`)}catch(t){console.error("Failed to force health check:",t),g(t,"Health check")}finally{n.value=!1}},a=async t=>{try{await navigator.clipboard.writeText(t),i.success("Copied","URL copied to clipboard",{life:2e3})}catch(l){console.error("Failed to copy to clipboard:",l),i.error("Copy Failed","Failed to copy URL to clipboard")}};return(t,l)=>{const h=Y("tooltip");return f(),w("div",J,[d(p(Q),{class:v(["h-full crawler-card",T.value])},{header:L(()=>[e("div",W,[e("div",X,[e("div",{class:v(["health-indicator mr-3",C.value])},[e("i",{class:v(_.value)},null,2)],2),e("div",Z,[e("h6",ee,c(t.crawler.name),1),e("p",te,c(t.crawler.id),1)])]),e("div",se,[$(d(p(F),{icon:"pi pi-refresh",text:"",rounded:"",size:"small",loading:n.value,onClick:s,class:"action-button"},null,8,["loading"]),[[h,"Force health check",void 0,{top:!0}]]),$(d(p(F),{icon:"pi pi-external-link",text:"",rounded:"",size:"small",onClick:l[0]||(l[0]=m=>t.$router.push(`/crawler/${t.crawler.id}`)),"data-testid":"detail-button",class:"action-button ml-1"},null,512),[[h,"View details",void 0,{top:!0}]])])])]),content:L(()=>[e("div",ae,[e("div",re,[e("div",le,[e("div",ie,[l[2]||(l[2]=e("div",{class:"metric-label"},"Status",-1)),d(p(G),{value:t.health.status,severity:S.value,class:"metric-tag"},null,8,["value","severity"])])]),e("div",oe,[e("div",ne,[l[3]||(l[3]=e("div",{class:"metric-label"},"Response Time",-1)),e("div",{class:v(["metric-value",H.value])},c(k.value),3)])])]),e("div",ce,[l[4]||(l[4]=e("div",{class:"metric-label"},"Last Check",-1)),e("div",de,c(A.value),1)]),t.health.message?(f(),w("div",ue,[l[5]||(l[5]=e("div",{class:"metric-label"},"Message",-1)),e("div",{class:v(["metric-value text-sm",b.value])},c(t.health.message),3)])):D("",!0),e("div",he,[l[6]||(l[6]=e("div",{class:"metric-label mb-2"},"Endpoint",-1)),e("div",me,[e("span",pe,c(t.crawler.baseUrl),1),$(d(p(F),{icon:"pi pi-copy",text:"",rounded:"",size:"small",onClick:l[1]||(l[1]=m=>a(t.crawler.baseUrl)),class:"copy-button"},null,512),[[h,"Copy URL",void 0,{top:!0}]])])])])]),_:1},8,["class"])])}}}),we=N(ve,[["__scopeId","data-v-e91acfa8"]]),fe={class:"crawlers-management"},ye={class:"content-grid"},ge={class:"crawler-cards"},Ce={class:"grid"},_e=E({__name:"CrawlersManagement",setup(x){const u=z(),r=j(),y=q(),i=K(),g=U(!1),n=o(()=>r.crawlers),C=async s=>{try{await new Promise(a=>setTimeout(a,500)),i.add({severity:"success",summary:"Crawler Started",detail:`Crawler ${s} started successfully`,life:3e3})}catch{i.add({severity:"error",summary:"Start Failed",detail:`Failed to start crawler ${s}`,life:5e3})}},_=async s=>{try{await new Promise(a=>setTimeout(a,500)),i.add({severity:"success",summary:"Crawler Stopped",detail:`Crawler ${s} stopped successfully`,life:3e3})}catch{i.add({severity:"error",summary:"Stop Failed",detail:`Failed to stop crawler ${s}`,life:5e3})}},S=s=>{u.push(`/crawler/${s}/config`)},T=s=>{u.push(`/crawler/${s}`)},H=async()=>{const s=n.value.filter(a=>a.status==="healthy"&&a.state!=="running");try{await Promise.all(s.map(()=>new Promise(a=>setTimeout(a,500)))),i.add({severity:"success",summary:"Crawlers Started",detail:`Started ${s.length} healthy crawlers`,life:3e3})}catch{i.add({severity:"error",summary:"Start Failed",detail:"Failed to start some crawlers",life:5e3})}},b=async()=>{const s=n.value.filter(a=>a.state==="running");try{await Promise.all(s.map(()=>new Promise(a=>setTimeout(a,500)))),i.add({severity:"success",summary:"Crawlers Stopped",detail:`Stopped ${s.length} running crawlers`,life:3e3})}catch{i.add({severity:"error",summary:"Stop Failed",detail:"Failed to stop some crawlers",life:5e3})}},k=async()=>{g.value=!0;try{await new Promise(s=>setTimeout(s,1e3)),i.add({severity:"success",summary:"Configuration Synced",detail:"Crawler configurations synchronized",life:3e3})}catch{i.add({severity:"error",summary:"Sync Failed",detail:"Failed to sync configuration",life:5e3})}finally{g.value=!1}},A=()=>{u.push("/monitoring/metrics")};return P(async()=>{try{await r.loadCrawlerData(),y.setCrawlerManagementActions({onStartAllHealthy:H,onStopAllRunning:b,onSyncConfiguration:k,onViewMetrics:A})}catch{i.add({severity:"error",summary:"Load Failed",detail:"Failed to load crawler data",life:5e3})}}),R(()=>{y.clearContextActions()}),(s,a)=>(f(),w("div",fe,[a[0]||(a[0]=e("div",{class:"page-header"},[e("div",{class:"header-content"},[e("h1",{class:"page-title"},"Crawlers Management"),e("p",{class:"page-description"},"Start, stop, and configure crawlers")])],-1)),e("div",ye,[e("div",ge,[e("div",Ce,[(f(!0),w(B,null,V(n.value,t=>(f(),w("div",{class:"col-12 md:col-6 lg:col-4",key:t.id},[d(we,{crawler:t,health:{status:"HEALTHY",lastCheck:new Date().toISOString(),message:"OK",responseTimeMs:100,crawlerId:t.id},onStart:C,onStop:_,onConfigure:S,onViewDetails:T},null,8,["crawler","health"])]))),128))])])])]))}}),ke=N(_e,[["__scopeId","data-v-c75acbbb"]]);export{ke as default};
